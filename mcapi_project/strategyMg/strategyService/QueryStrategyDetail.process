<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/schemas/mcapi_project/shareResources/schemas/Schema.xsd5" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx2="http://www.tibco.com/schemas/mcapi_project/shareResources/schemas/Schema.xsd17" xmlns:ns="http://www.tibco.com/schemas/mcapi_project/shareResources/schemas/Schema.xsd9" xmlns:pfx3="http://www.tibco.com/schemas/mcapi_project/shareResources/schemas/Schema.xsd18" xmlns:pfx4="http://www.tibco.com/schemas/mcapi_project/shareResources/schemas/Schema.xsd24" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/schemas/mcapi_project/shareResources/schemas/Schema.xsd13" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.tibco.com/schemas/mcapi_project/shareResources/schemas/Schema.xsd5" schemaLocation="/shareResources/schemas/ConditionsSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/mcapi_project/shareResources/schemas/Schema.xsd9" schemaLocation="/shareResources/schemas/AccountPO.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/mcapi_project/shareResources/schemas/Schema.xsd17" schemaLocation="/shareResources/schemas/TrackLink.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/mcapi_project/shareResources/schemas/Schema.xsd18" schemaLocation="/shareResources/schemas/Strategy.xsd"/>
    <pd:name>strategyMg/strategyService/QueryStrategyDetail.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:requestParams"/>
    <pd:startX>43</pd:startX>
    <pd:startY>55</pd:startY>
    <pd:returnBindings>
        <responseJsonStr>
            <xsl:value-of select="$Render-JSON/ns2:ActivityOutputClass/jsonString"/>
        </responseJsonStr>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="responseJsonStr" type="xsd:string"/>
    </pd:endType>
    <pd:endX>1015</pd:endX>
    <pd:endY>95</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1499828932246</pd:targetNamespace>
    <pd:activity name="StrategyDetailQuery">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>481</pd:x>
        <pd:y>97</pd:y>
        <config>
            <processName>/strategyMg/strategyDao/StrategyQuery.process</processName>
        </config>
        <pd:inputBindings>
            <pfx3:strategyObj>
                <xsl:if test="$Parse-JSON/ns2:ActivityOutputClass/pfx3:strategyObj/pfx3:strategyId">
                    <pfx3:strategyId>
                        <xsl:value-of select="$Parse-JSON/ns2:ActivityOutputClass/pfx3:strategyObj/pfx3:strategyId"/>
                    </pfx3:strategyId>
                </xsl:if>
                <xsl:if test="$Parse-JSON/ns2:ActivityOutputClass/pfx3:strategyObj/pfx3:productOS">
                    <pfx3:productOS>
                        <xsl:value-of select="$Parse-JSON/ns2:ActivityOutputClass/pfx3:strategyObj/pfx3:productOS"/>
                    </pfx3:productOS>
                </xsl:if>
                <pfx3:stratecityStatus>
                    <xsl:value-of select="0"/>
                </pfx3:stratecityStatus>
                <xsl:choose>
                    <xsl:when test="count($StrategyCityQuery/pfx4:straCityResults/pfx4:straCityObj)>0">
                        <pfx3:isLeftJoin>
                            <xsl:value-of select="&quot;true&quot;"/>
                        </pfx3:isLeftJoin>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx3:isLeftJoin>
                            <xsl:value-of select="&quot;false&quot;"/>
                        </pfx3:isLeftJoin>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx3:strategyObj>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>149</pd:x>
        <pd:y>166</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor ref="pfx3:strategyObj"/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Start/pfx:requestParams/pfx:jsonPostData"/>
                </jsonString>
            </ns2:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>775</pd:x>
        <pd:y>151</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityInputEditor ref="pfx3:strategyResults"/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInputClass>
                <pfx3:strategyResults>
                    <xsl:for-each select="$StrategyDetailQuery/pfx3:strategyResults/pfx3:strategyObj">
                        <pfx3:strategyObj>
                            <xsl:if test="pfx3:strategyId">
                                <pfx3:strategyId>
                                    <xsl:value-of select="pfx3:strategyId"/>
                                </pfx3:strategyId>
                            </xsl:if>
                            <xsl:if test="pfx3:strategyName">
                                <pfx3:strategyName>
                                    <xsl:value-of select="pfx3:strategyName"/>
                                </pfx3:strategyName>
                            </xsl:if>
                            <xsl:if test="pfx3:deviceType">
                                <pfx3:deviceType>
                                    <xsl:value-of select="pfx3:deviceType"/>
                                </pfx3:deviceType>
                            </xsl:if>
                            <xsl:if test="pfx3:minosv">
                                <pfx3:minosv>
                                    <xsl:value-of select="pfx3:minosv"/>
                                </pfx3:minosv>
                            </xsl:if>
                            <xsl:if test="pfx3:maxosv">
                                <pfx3:maxosv>
                                    <xsl:value-of select="pfx3:maxosv"/>
                                </pfx3:maxosv>
                            </xsl:if>
                            <xsl:if test="pfx3:connectionType">
                                <pfx3:connectionType>
                                    <xsl:value-of select="pfx3:connectionType"/>
                                </pfx3:connectionType>
                            </xsl:if>
                            <xsl:if test="pfx3:paraValidation">
                                <pfx3:paraValidation>
                                    <xsl:value-of select="pfx3:paraValidation"/>
                                </pfx3:paraValidation>
                            </xsl:if>
                            <xsl:if test="pfx3:frequencyPara">
                                <pfx3:frequencyPara>
                                    <xsl:value-of select="pfx3:frequencyPara"/>
                                </pfx3:frequencyPara>
                            </xsl:if>
                            <pfx3:frequencyInterval>
                                <xsl:copy-of select="pfx3:frequencyInterval/@xsi:nil"/>
                                <xsl:value-of select="pfx3:frequencyInterval"/>
                            </pfx3:frequencyInterval>
                            <xsl:if test="pfx3:timeFrame">
                                <pfx3:timeFrame>
                                    <xsl:value-of select="pfx3:timeFrame"/>
                                </pfx3:timeFrame>
                            </xsl:if>
                            <xsl:if test="pfx3:productOS">
                                <pfx3:productOS>
                                    <xsl:value-of select="pfx3:productOS"/>
                                </pfx3:productOS>
                            </xsl:if>
                            <xsl:if test="pfx3:cityIds">
                                <pfx3:cityIds>
                                    <xsl:value-of select="pfx3:cityIds"/>
                                </pfx3:cityIds>
                            </xsl:if>
                        </pfx3:strategyObj>
                    </xsl:for-each>
                </pfx3:strategyResults>
            </ns2:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="StrategyCityQuery">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>319</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/strategyMg/strategyDao/StrategyCityQuery.process</processName>
        </config>
        <pd:inputBindings>
            <pfx4:straCityObj>
                <xsl:if test="$Parse-JSON/ns2:ActivityOutputClass/pfx3:strategyObj/pfx3:strategyId">
                    <pfx4:strategyId>
                        <xsl:value-of select="$Parse-JSON/ns2:ActivityOutputClass/pfx3:strategyObj/pfx3:strategyId"/>
                    </pfx4:strategyId>
                </xsl:if>
                <pfx4:straCityStatus>
                    <xsl:value-of select="0"/>
                </pfx4:straCityStatus>
            </pfx4:straCityObj>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>StrategyCityQuery</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>StrategyDetailQuery</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>StrategyCityQuery</pd:from>
        <pd:to>StrategyDetailQuery</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>