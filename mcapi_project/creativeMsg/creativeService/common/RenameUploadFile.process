<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <pd:name>creativeMsg/creativeService/common/RenameUploadFile.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="creativeDirPath" type="xsd:string"/>
                    <xsd:element name="creativeId" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="creativeName" type="xsd:string"/>
                    <xsd:element name="tokenInfo" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="validateRepeat" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>150</pd:startX>
    <pd:startY>64</pd:startY>
    <pd:returnBindings>
        <imageMaterialJson>
            <xsl:value-of select="$Java-Code/javaCodeActivityOutput/imageMaterialJson"/>
        </imageMaterialJson>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="imageMaterialJson" type="xsd:string"/>
    </pd:endType>
    <pd:endX>450</pd:endX>
    <pd:endY>64</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1491446565155</pd:targetNamespace>
    <pd:activity name="Java Code">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>298</pd:x>
        <pd:y>131</pd:y>
        <config>
            <fileName>RenameUploadFileJavaCode</fileName>
            <packageName>creativeMsg.creativeService.common.RenameUploadFile</packageName>
            <fullsource>package creativeMsg.creativeService.common.RenameUploadFile;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Iterator;

import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import javax.imageio.stream.FileImageInputStream;
import javax.imageio.stream.ImageInputStream;
import java.awt.image.BufferedImage;
import java.io.FilenameFilter;

public class RenameUploadFileJavaCode{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String creativeDirPath = "";
	protected String creativeId = "";
	protected String creativeName = "";
	protected String tokenInfo = "";
	protected String validateRepeat = "";
	protected String imageMaterialJson = "";
	public String getcreativeDirPath() {
		return creativeDirPath;
	}
	public void setcreativeDirPath(String val) {
		creativeDirPath = val;
	}
	public String getcreativeId() {
		return creativeId;
	}
	public void setcreativeId(String val) {
		creativeId = val;
	}
	public String getcreativeName() {
		return creativeName;
	}
	public void setcreativeName(String val) {
		creativeName = val;
	}
	public String gettokenInfo() {
		return tokenInfo;
	}
	public void settokenInfo(String val) {
		tokenInfo = val;
	}
	public String getvalidateRepeat() {
		return validateRepeat;
	}
	public void setvalidateRepeat(String val) {
		validateRepeat = val;
	}
	public String getimageMaterialJson() {
		return imageMaterialJson;
	}
	public void setimageMaterialJson(String val) {
		imageMaterialJson = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public RenameUploadFileJavaCode() {
	}
	public void invoke() throws Exception {

/* Available Variables: DO NOT MODIFY
	In  : String creativeDirPath
	In  : String creativeId
	In  : String creativeName
	In  : String tokenInfo
	In  : String validateRepeat
	Out : String imageMaterialJson
* Available Variables: DO NOT MODIFY *****/
       imageMaterialJson= renameFileName();

}
	/*
	 * 重命名创意文件夹下文件名称
	 */
public String renameFileName() throws FileNotFoundException, IOException{
		StringBuffer imageJsonBuf= new StringBuffer();
		//imageJsonBuf.append("{\"materialResults\":{ \"materialObj\":[");
		imageJsonBuf.append("{\"materialResults\":{ \"creativeId\":\""+creativeId+"\",\"materialObj\":[");
		
		File file= new File(creativeDirPath);
		String dirPath = file.getAbsolutePath();
		System.out.println("dirPath:"+dirPath);
		if(file.isDirectory()){
			File[] files = file.listFiles();
			if(files!=null &amp;&amp; files.length&gt;0){
				for(File fromFile: files){
					String fromFileName = fromFile.getName();
					System.out.println("fromFileName:"+fromFileName);
					if(fromFileName.toLowerCase().endsWith("jpg_t")||fromFileName.toLowerCase().endsWith("jpeg_t")||fromFileName.toLowerCase().endsWith("png_t")){
						String suffixName = fromFileName.split("\\.")[1];
						suffixName = suffixName.substring(0,suffixName.length()-2 );
						InputStream inputstream = new FileInputStream(fromFile);
						//ImageInputStream  iis = null;
						/*int width= 0;
						int height= 0;*/
						
						/*Iterator&lt;ImageReader&gt; it = ImageIO.getImageReaders(new FileImageInputStream(fromFile)); 
						//PNGImageReader pngImageReader = 
						//Iterator&lt;ImageReader&gt; it = ImageIO.getImageReadersByFormatName("png"); 
					    if(it.hasNext()){
					    	ImageReader imageReader = it.next();
					    	iis = ImageIO.createImageInputStream(fromFile);
					    	imageReader.setInput(iis,true);
					    	
					    	width = imageReader.getWidth(0);
					    	height = imageReader.getHeight(0);
					    	
					    }
					*/
					    BufferedImage sourceImg =ImageIO.read(inputstream);  
						final int width= sourceImg.getWidth();
						final int height= sourceImg.getHeight();
					
					    
						
						String creativeSize=width+"x"+height+"."+suffixName;
						//String creativeSize=sourceImg.getWidth()+"x"+sourceImg.getHeight()+"."+suffixName;
						File toFile = new File(dirPath+"/"+creativeSize);
						
						inputstream.close();
						
						
						
						if(!toFile.exists()){
							
							fromFile.renameTo(toFile);
						
						//}else if(toFile.exists() &amp;&amp; !fromFile.getName().equals(toFile.getName())){
						}else if(toFile.exists()){
							
							FilenameFilter filenameFilter = new FilenameFilter() {
								
								@Override
								public boolean accept(File dir, String name) {
									// TODO Auto-generated method stub
									if(name.indexOf(width+"x"+height)&gt;=0){
										return true;
									}
									return false;
								}
							};
							
							File[] subfiles = file.listFiles(filenameFilter);
							if(subfiles!=null &amp;&amp; subfiles.length&gt;0){
								int n=subfiles.length;
								
								
								creativeSize=width+"x"+height+"("+n+")"+"."+suffixName;
								
								//creativeSize=width+"x"+height+"("+n+")"+"."+suffixName;
								toFile = new File(dirPath+"/"+creativeSize);
								fromFile.renameTo(toFile);	
							}
							
						}
						imageJsonBuf.append("{\"creativeId\":\""+creativeId+"\",\"materialWidth\":\""+width+"\",\"materialHeight\":\""+height+"\",\"materialType\":\"pic\",\"materialUrl\":\"/"+creativeName+"/"+creativeSize+"\"},");
												
						
						
					}
					
					
					
				}
			}
	
		}
		imageMaterialJson = imageJsonBuf.toString();
		if(imageMaterialJson.length()&gt;0){
			imageMaterialJson = imageMaterialJson.substring(0, imageMaterialJson.length()-1);
		}
		imageJsonBuf.deleteCharAt(imageMaterialJson.length());
		//imageJsonBuf.append("]}}");
		imageJsonBuf.append("],"+"\"validateRepeat\":\""+validateRepeat+"\","+"\"tokenInfo\":\""+tokenInfo+"\"}}");
		
	    return imageJsonBuf.toString();
	}

}
</fullsource>
            <outputData>
                <row>
                    <fieldName>imageMaterialJson</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <inputData>
                <row>
                    <fieldName>creativeDirPath</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>creativeId</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>creativeName</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>tokenInfo</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
                <row>
                    <fieldName>validateRepeat</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <byteCode>
                <class>
                    <name>RenameUploadFileJavaCode$1</name>
                    <byteCode>yv66vgAAADQAOgkADAAgCQAMACEJAAwAIgoADQAjBwAkCgAFACMKAAUAJQgAJgoABQAnCgAFACgKACkAKgcAKwcALQcALgEACXZhbCR3aWR0aAEAAUkBAAp2YWwkaGVpZ2h0AQAGdGhpcyQwAQBOTGNyZWF0aXZlTXNnL2NyZWF0aXZlU2VydmljZS9jb21tb24vUmVuYW1lVXBsb2FkRmlsZS9SZW5hbWVVcGxvYWRGaWxlSmF2YUNvZGU7AQAGPGluaXQ+AQBTKExjcmVhdGl2ZU1zZy9jcmVhdGl2ZVNlcnZpY2UvY29tbW9uL1JlbmFtZVVwbG9hZEZpbGUvUmVuYW1lVXBsb2FkRmlsZUphdmFDb2RlO0lJKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAGYWNjZXB0AQAjKExqYXZhL2lvL0ZpbGU7TGphdmEvbGFuZy9TdHJpbmc7KVoBAA1TdGFja01hcFRhYmxlAQAKU291cmNlRmlsZQEAHVJlbmFtZVVwbG9hZEZpbGVKYXZhQ29kZS5qYXZhAQAPRW5jbG9zaW5nTWV0aG9kBwAvDAAwADEMABIAEwwADwAQDAARABAMABQAMgEAF2phdmEvbGFuZy9TdHJpbmdCdWlsZGVyDAAzADQBAAF4DAAzADUMADYAMQcANwwAOAA5AQBOY3JlYXRpdmVNc2cvY3JlYXRpdmVTZXJ2aWNlL2NvbW1vbi9SZW5hbWVVcGxvYWRGaWxlL1JlbmFtZVVwbG9hZEZpbGVKYXZhQ29kZSQxAQAMSW5uZXJDbGFzc2VzAQAQamF2YS9sYW5nL09iamVjdAEAFmphdmEvaW8vRmlsZW5hbWVGaWx0ZXIBAExjcmVhdGl2ZU1zZy9jcmVhdGl2ZVNlcnZpY2UvY29tbW9uL1JlbmFtZVVwbG9hZEZpbGUvUmVuYW1lVXBsb2FkRmlsZUphdmFDb2RlAQAOcmVuYW1lRmlsZU5hbWUBABQoKUxqYXZhL2xhbmcvU3RyaW5nOwEAAygpVgEABmFwcGVuZAEAHChJKUxqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcjsBAC0oTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcjsBAAh0b1N0cmluZwEAEGphdmEvbGFuZy9TdHJpbmcBAAdpbmRleE9mAQAVKExqYXZhL2xhbmcvU3RyaW5nOylJACAADAANAAEADgADEBAADwAQAAAQEAARABAAABAQABIAEwAAAAIAAAAUABUAAQAWAAAALAACAAQAAAAUKiu1AAEqHLUAAiodtQADKrcABLEAAAABABcAAAAGAAEAAACIAAEAGAAZAAEAFgAAAFEAAwADAAAAKCy7AAVZtwAGKrQAArYABxIItgAJKrQAA7YAB7YACrYAC5sABQSsA6wAAAACABcAAAAOAAMAAACNACQAjgAmAJAAGgAAAAMAASYAAwAbAAAAAgAcAB0AAAAEAB4AHwAsAAAACgABAAwAAAAAAAA=</byteCode>
                </class>
                <class>
                    <name>RenameUploadFileJavaCode</name>
                    <byteCode>yv66vgAAADQA4gkAQgBuCQBCAG8JAEIAcAkAQgBxCQBCAHIJAEIAcwoAQwB0CAB1CgBCAHYHAHcKAAoAdAcAeAoADAB0CAB5CgAMAHoIAHsKAAwAfAoACgB9BwB+CgATAH8KABMAgAkAgQCCCACDCgCEAIUKABMAhgoAEwCHCgATAIgIAIkKAIoAiwgAjAoAigCNCACOCACPCACQCgCKAJEKAIoAkgoAigCTBwCUCgAmAJUKAJYAlwoAmACZCgCYAJoKAAwAmwgAnAgAnQgAngoAnwCgCgATAKEKABMAogcAowoAMgCkCgATAKUIAKYIAKcIAKgIAKkIAKoIAKsIAKwKAAoAfAoACgCtCACuCACvCACwCACxBwCyBwCzAQAMSW5uZXJDbGFzc2VzAQAPY3JlYXRpdmVEaXJQYXRoAQASTGphdmEvbGFuZy9TdHJpbmc7AQAKY3JlYXRpdmVJZAEADGNyZWF0aXZlTmFtZQEACXRva2VuSW5mbwEADnZhbGlkYXRlUmVwZWF0AQARaW1hZ2VNYXRlcmlhbEpzb24BABJnZXRjcmVhdGl2ZURpclBhdGgBABQoKUxqYXZhL2xhbmcvU3RyaW5nOwEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJzZXRjcmVhdGl2ZURpclBhdGgBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBAA1nZXRjcmVhdGl2ZUlkAQANc2V0Y3JlYXRpdmVJZAEAD2dldGNyZWF0aXZlTmFtZQEAD3NldGNyZWF0aXZlTmFtZQEADGdldHRva2VuSW5mbwEADHNldHRva2VuSW5mbwEAEWdldHZhbGlkYXRlUmVwZWF0AQARc2V0dmFsaWRhdGVSZXBlYXQBABRnZXRpbWFnZU1hdGVyaWFsSnNvbgEAFHNldGltYWdlTWF0ZXJpYWxKc29uAQAGPGluaXQ+AQADKClWAQAGaW52b2tlAQAKRXhjZXB0aW9ucwcAtAEADnJlbmFtZUZpbGVOYW1lAQANU3RhY2tNYXBUYWJsZQcAsgcAdwcAfgcAtQcAtgcAtwcAuAcAuQcAugEAClNvdXJjZUZpbGUBAB1SZW5hbWVVcGxvYWRGaWxlSmF2YUNvZGUuamF2YQwARQBGDABHAEYMAEgARgwASQBGDABKAEYMAEsARgwAXABdAQAADABhAE0BABZqYXZhL2xhbmcvU3RyaW5nQnVmZmVyAQAXamF2YS9sYW5nL1N0cmluZ0J1aWxkZXIBACN7Im1hdGVyaWFsUmVzdWx0cyI6eyAiY3JlYXRpdmVJZCI6IgwAuwC8AQARIiwibWF0ZXJpYWxPYmoiOlsMAL0ATQwAuwC+AQAMamF2YS9pby9GaWxlDABcAFEMAL8ATQcAwAwAwQDCAQAIZGlyUGF0aDoHAMMMAMQAUQwAxQDGDADHAMgMAMkATQEADWZyb21GaWxlTmFtZToHALUMAMoATQEABWpwZ190DADLAMwBAAZqcGVnX3QBAAVwbmdfdAEAAlwuDADNAM4MAM8A0AwA0QDSAQAXamF2YS9pby9GaWxlSW5wdXRTdHJlYW0MAFwA0wcA1AwA1QDWBwC4DADXANAMANgA0AwAuwDZAQABeAEAAS4BAAEvBwC3DADaAF0MANsAxgwA3ADdAQBOY3JlYXRpdmVNc2cvY3JlYXRpdmVTZXJ2aWNlL2NvbW1vbi9SZW5hbWVVcGxvYWRGaWxlL1JlbmFtZVVwbG9hZEZpbGVKYXZhQ29kZSQxDABcAN4MAMcA3wEAASgBAAEpAQAPeyJjcmVhdGl2ZUlkIjoiAQATIiwibWF0ZXJpYWxXaWR0aCI6IgEAFCIsIm1hdGVyaWFsSGVpZ2h0IjoiAQAnIiwibWF0ZXJpYWxUeXBlIjoicGljIiwibWF0ZXJpYWxVcmwiOiIvAQADIn0sDADgAOEBABRdLCJ2YWxpZGF0ZVJlcGVhdCI6IgEAAiIsAQANInRva2VuSW5mbyI6IgEAAyJ9fQEATGNyZWF0aXZlTXNnL2NyZWF0aXZlU2VydmljZS9jb21tb24vUmVuYW1lVXBsb2FkRmlsZS9SZW5hbWVVcGxvYWRGaWxlSmF2YUNvZGUBABBqYXZhL2xhbmcvT2JqZWN0AQATamF2YS9sYW5nL0V4Y2VwdGlvbgEAEGphdmEvbGFuZy9TdHJpbmcBAA9bTGphdmEvaW8vRmlsZTsBABNqYXZhL2lvL0lucHV0U3RyZWFtAQAcamF2YS9hd3QvaW1hZ2UvQnVmZmVyZWRJbWFnZQEAHWphdmEvaW8vRmlsZU5vdEZvdW5kRXhjZXB0aW9uAQATamF2YS9pby9JT0V4Y2VwdGlvbgEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEACHRvU3RyaW5nAQAsKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZ0J1ZmZlcjsBAA9nZXRBYnNvbHV0ZVBhdGgBABBqYXZhL2xhbmcvU3lzdGVtAQADb3V0AQAVTGphdmEvaW8vUHJpbnRTdHJlYW07AQATamF2YS9pby9QcmludFN0cmVhbQEAB3ByaW50bG4BAAtpc0RpcmVjdG9yeQEAAygpWgEACWxpc3RGaWxlcwEAESgpW0xqYXZhL2lvL0ZpbGU7AQAHZ2V0TmFtZQEAC3RvTG93ZXJDYXNlAQAIZW5kc1dpdGgBABUoTGphdmEvbGFuZy9TdHJpbmc7KVoBAAVzcGxpdAEAJyhMamF2YS9sYW5nL1N0cmluZzspW0xqYXZhL2xhbmcvU3RyaW5nOwEABmxlbmd0aAEAAygpSQEACXN1YnN0cmluZwEAFihJSSlMamF2YS9sYW5nL1N0cmluZzsBABEoTGphdmEvaW8vRmlsZTspVgEAFWphdmF4L2ltYWdlaW8vSW1hZ2VJTwEABHJlYWQBADUoTGphdmEvaW8vSW5wdXRTdHJlYW07KUxqYXZhL2F3dC9pbWFnZS9CdWZmZXJlZEltYWdlOwEACGdldFdpZHRoAQAJZ2V0SGVpZ2h0AQAcKEkpTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEABWNsb3NlAQAGZXhpc3RzAQAIcmVuYW1lVG8BABEoTGphdmEvaW8vRmlsZTspWgEAUyhMY3JlYXRpdmVNc2cvY3JlYXRpdmVTZXJ2aWNlL2NvbW1vbi9SZW5hbWVVcGxvYWRGaWxlL1JlbmFtZVVwbG9hZEZpbGVKYXZhQ29kZTtJSSlWAQApKExqYXZhL2lvL0ZpbGVuYW1lRmlsdGVyOylbTGphdmEvaW8vRmlsZTsBAAxkZWxldGVDaGFyQXQBABsoSSlMamF2YS9sYW5nL1N0cmluZ0J1ZmZlcjsAIQBCAEMAAAAGAAQARQBGAAAABABHAEYAAAAEAEgARgAAAAQASQBGAAAABABKAEYAAAAEAEsARgAAAA8AAQBMAE0AAQBOAAAAHQABAAEAAAAFKrQAAbAAAAABAE8AAAAGAAEAAAAaAAEAUABRAAEATgAAACIAAgACAAAABiortQABsQAAAAEATwAAAAoAAgAAAB0ABQAeAAEAUgBNAAEATgAAAB0AAQABAAAABSq0AAKwAAAAAQBPAAAABgABAAAAIAABAFMAUQABAE4AAAAiAAIAAgAAAAYqK7UAArEAAAABAE8AAAAKAAIAAAAjAAUAJAABAFQATQABAE4AAAAdAAEAAQAAAAUqtAADsAAAAAEATwAAAAYAAQAAACYAAQBVAFEAAQBOAAAAIgACAAIAAAAGKiu1AAOxAAAAAQBPAAAACgACAAAAKQAFACoAAQBWAE0AAQBOAAAAHQABAAEAAAAFKrQABLAAAAABAE8AAAAGAAEAAAAsAAEAVwBRAAEATgAAACIAAgACAAAABiortQAEsQAAAAEATwAAAAoAAgAAAC8ABQAwAAEAWABNAAEATgAAAB0AAQABAAAABSq0AAWwAAAAAQBPAAAABgABAAAAMgABAFkAUQABAE4AAAAiAAIAAgAAAAYqK7UABbEAAAABAE8AAAAKAAIAAAA1AAUANgABAFoATQABAE4AAAAdAAEAAQAAAAUqtAAGsAAAAAEATwAAAAYAAQAAADgAAQBbAFEAAQBOAAAAIgACAAIAAAAGKiu1AAaxAAAAAQBPAAAACgACAAAAOwAFADwAAQBcAF0AAQBOAAAAXQACAAEAAAApKrcAByoSCLUAASoSCLUAAioSCLUAAyoSCLUABCoSCLUABSoSCLUABrEAAAABAE8AAAAiAAgAAAA+AAQAEwAKABQAEAAVABYAFgAcABcAIgAYACgAPwABAF4AXQACAE4AAAAlAAIAAQAAAAkqKrYACbUABrEAAAABAE8AAAAKAAIAAABKAAgATABfAAAABAABAGAAAQBhAE0AAgBOAAAD6AAFABQAAAKouwAKWbcAC0wruwAMWbcADRIOtgAPKrQAArYADxIQtgAPtgARtgASV7sAE1kqtAABtwAUTSy2ABVOsgAWuwAMWbcADRIXtgAPLbYAD7YAEbYAGCy2ABmZAekstgAaOgQZBMYB3hkEvp4B2BkEOgUZBb42BgM2BxUHFQaiAcUZBRUHMjoIGQi2ABs6CbIAFrsADFm3AA0SHLYADxkJtgAPtgARtgAYGQm2AB0SHrYAH5oAHRkJtgAdEiC2AB+aABAZCbYAHRIhtgAfmQFwGQkSIrYAIwQyOgoZCgMZCrYAJAVktgAlOgq7ACZZGQi3ACc6CxkLuAAoOgwZDLYAKTYNGQy2ACo2DrsADFm3AA0VDbYAKxIstgAPFQ62ACsSLbYADxkKtgAPtgAROg+7ABNZuwAMWbcADS22AA8SLrYADxkPtgAPtgARtwAUOhAZC7YALxkQtgAwmgAOGQgZELYAMVenAI4ZELYAMJkAhrsAMlkqFQ0VDrcAMzoRLBkRtgA0OhIZEsYAaxkSvp4AZRkSvjYTuwAMWbcADRUNtgArEiy2AA8VDrYAKxI1tgAPFRO2ACsSNrYADxIttgAPGQq2AA+2ABE6D7sAE1m7AAxZtwANLbYADxIutgAPGQ+2AA+2ABG3ABQ6EBkIGRC2ADFXK7sADFm3AA0SN7YADyq0AAK2AA8SOLYADxUNtgArEjm2AA8VDrYAKxI6tgAPKrQAA7YADxIutgAPGQ+2AA8SO7YAD7YAEbYAEleEBwGn/joqK7YAPLUABiq0AAa2ACSeABgqKrQABgMqtAAGtgAkBGS2ACW1AAYrKrQABrYAJLYAPVcruwAMWbcADRI+tgAPKrQABbYADxI/tgAPEkC2AA8qtAAEtgAPEkG2AA+2ABG2ABJXK7YAPLAAAAACAE8AAACeACcAAABRAAgAUwAoAFUANABWADkAVwBSAFgAWQBZAF8AWgBqAFsAhABcAIsAXQClAF4AzABfANcAYADmAGEA8QBzAPgAdAD/AHUBBgB5ASsAewFMAH0BUQCBAVkAgwFkAIYBbACIAXoAlAGCAJUBjQCWAZIAmQHGAJwB5wCdAe8AoQI5AFsCPwCtAkcArgJRAK8CZgCxAnIAswKjALUAYgAAAIoAB/8AdgAIBwBjBwBkBwBlBwBmBwBnBwBnAQEAAP0AVQcAZQcAZv8AlwARBwBjBwBkBwBlBwBmBwBnBwBnAQEHAGUHAGYHAGYHAGgHAGkBAQcAZgcAZQAA+wCK/wBJAAgHAGMHAGQHAGUHAGYHAGcHAGcBAQAA/wAFAAQHAGMHAGQHAGUHAGYAACYAXwAAAAYAAgBqAGsAAgBsAAAAAgBtAEQAAAAKAAEAMgAAAAAAAA==</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <creativeDirPath>
                    <xsl:value-of select="$Start/root/creativeDirPath"/>
                </creativeDirPath>
                <xsl:if test="$Start/root/creativeId">
                    <creativeId>
                        <xsl:value-of select="$Start/root/creativeId"/>
                    </creativeId>
                </xsl:if>
                <creativeName>
                    <xsl:value-of select="$Start/root/creativeName"/>
                </creativeName>
                <xsl:if test="$Start/root/tokenInfo">
                    <tokenInfo>
                        <xsl:value-of select="$Start/root/tokenInfo"/>
                    </tokenInfo>
                </xsl:if>
                <xsl:if test="$Start/root/validateRepeat">
                    <validateRepeat>
                        <xsl:value-of select="$Start/root/validateRepeat"/>
                    </validateRepeat>
                </xsl:if>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Java Code</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Java Code</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>